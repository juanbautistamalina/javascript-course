/* POO

- Clase: Modelo a seguir
- Objetos: Instancia de una clase
    --> Atributos: Caracter√≠stica o propiedad del objeto (variables dentro de un objeto)
    --> M√©todos: Acciones que un objeto puede realizar (funciones dentro de un objeto) 
*/

// JavaScript es un lenguaje orientado a objetos basado en Prototipos (NO en Clases)
// Prototipo: Mecanismo por el cual un objeto puede heredar atributos y m√©todos de un objeto padre

// __proto__: Object
const animal = {
  nombre: "Bugs Bunny",
  especie: "Conejo",
  color: "Gris y blanco",
};

// Funci√≥n constructora: Se asignan los m√©todos al Prototino, NO a la funci√≥n como tal
function Animal(nombre, especie) {
  this.nombre = nombre;
  this.especie = especie;
}

// M√©todos agregados al prototipo de la funci√≥n constructora
Animal.prototype.hablar = function () {
  console.log(`Hola, soy ${this.nombre}`);
};

Animal.prototype.saltar = function () {
  console.log(`${this.nombre} est√° saltando üêæ`);
};

// ---------------------------------------------------------------

const scoobyDoo = new Animal("Scooby-Doo", "Perro");
const bugsBunny = new Animal("Bugs Bunny", "Conejo");
console.log(scoobyDoo);
console.log(bugsBunny);
